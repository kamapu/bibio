
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "biblio"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('biblio')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("compare_df")
> ### * compare_df
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: compare_df
> ### Title: Compare data frames and libraries
> ### Aliases: compare_df compare_df,data.frame,data.frame,character-method
> ###   compare_df,lib_df,lib_df,missing-method
> 
> ### ** Examples
> 
> # Partially matching libraries
> Refs1 <- synopsis[1:10, ]
> Refs2 <- synopsis[6:15, ]
> 
> # some modification in second library
> Refs2[3, "title"] <- "New Title"
> 
> # compare libraries
> compare_df(Refs1, Refs2)
## deleted entries (5):
'rovira2006' 'luebert2004-2' 'pliscoff2006' 'smith-ramirez2005' 'flores_meza2016'

## added entries (5):
'gajardo1983' 'gajardo1994-2' 'lomolino2010' 'shelford1931' 'austin2013'

## updates in entry 'ramirez1989-6'
 - old title: Cambios estacionales de frecuencia y cobertura en una pradera del Centro Sur de Chile
 - new title: New Title

> 
> 
> 
> 
> cleanEx()
> nameEx("detect_keys")
> ### * detect_keys
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: detect_keys
> ### Title: Detect bibtexkeys used in an r-markdown document
> ### Aliases: detect_keys detect_keys.character detect_keys,character-method
> ###   detect_keys.rmd_doc detect_keys,rmd_doc-method
> 
> ### ** Examples
> 
> ## Read installed r-markdown document
> my_document <- readLines(file.path(path.package("biblio"), "document.Rmd"))
> 
> ## Screen for citations
> cited_refs <- detect_keys(my_document)
> cited_refs
       bibtexkey line
1 oberdorfer1960   10
2     veblen1995   12
3     veblen1996   12
4 oberdorfer1960   15
5 oberdorfer1960   19
6     veblen1996   24
7   pollmann2004   24
8    ramirez2005   29
> 
> 
> 
> 
> cleanEx()
> nameEx("print")
> ### * print
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: print
> ### Title: Print content of lib_df objects
> ### Aliases: print print.lib_df print,lib_df-method print.comp_df
> ###   print,comp_df-method
> 
> ### ** Examples
> 
> synopsis
Object of class 'lib_df'

Number of references: 1701
Number of variables: 23
Duplicated entries: FALSE
> 
> 
> 
> 
> cleanEx()
> nameEx("read_bib")
> ### * read_bib
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: read_bib
> ### Title: Read BibTeX Databases
> ### Aliases: read_bib
> 
> ### ** Examples
> 
> Refs <- read_bib(x = file.path(path.package("biblio"),
+   "LuebertPliscoff.bib"))
> Refs
Object of class 'lib_df'

Number of references: 1701
Number of variables: 23
Duplicated entries: FALSE
> 
> 
> 
> 
> cleanEx()
> nameEx("reflist")
> ### * reflist
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: reflist
> ### Title: Write a Reference List in rmarkdown
> ### Aliases: reflist reflist,lib_df-method reflist,character-method
> 
> ### ** Examples
> 
> ## Not run: 
> ##D reflist(synopsis)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("synopsis")
> ### * synopsis
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: synopsis
> ### Title: References by Lueber and Pliscoff (2018)
> ### Aliases: synopsis
> ### Keywords: datasets
> 
> ### ** Examples
> 
> data(synopsis)
> 
> ## Import from installed bibtex file
> synopsis <- read_bib(x = file.path(path.package("biblio"),
+   "LuebertPliscoff.bib"))
> 
> 
> 
> 
> cleanEx()
> nameEx("update")
> ### * update
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: update
> ### Title: Update data frames
> ### Aliases: update update.data.frame update.lib_df update<-
> ###   update<-,data.frame,data.frame-method update<-,lib_df,lib_df-method
> 
> ### ** Examples
> 
> # modifying the data set iris
> data(iris)
> iris$id <- 1:nrow(iris) # ID column added
> 
> # rows to add using mean values per species
> iris_mod <- aggregate(cbind(Sepal.Length, Sepal.Width, Petal.Length,
+     Petal.Width) ~ Species, data = iris, FUN = mean)
> iris_mod$id <- (1:nrow(iris_mod)) + nrow(iris)
> iris_mod <- do.call(rbind, list(iris, iris_mod[ , colnames(iris)]))
> 
> # delete some entries
> iris_mod <- iris_mod[-c(15, 75, 105, 145), ]
> 
> # modify entries
> iris_mod$Petal.Length[c(20, 30)] <- 0
> iris_mod$Petal.Width[c(20, 50)] <- 0
> 
> # just a comparison
> update(iris, iris_mod, key = "id")
## deleted entries (4):
'15' '75' '105' '145'

## added entries (3):
'151' '152' '153'

## updates in entry '21'
 - old Petal.Length: 1.7
 - new Petal.Length: 0

 - old Petal.Width: 0.2
 - new Petal.Width: 0

## updates in entry '31'
 - old Petal.Length: 1.6
 - new Petal.Length: 0

## updates in entry '51'
 - old Petal.Width: 1.4
 - new Petal.Width: 0

> 
> # do update
> iris <- update(iris, iris_mod, key = "id", delete = TRUE, add = TRUE,
+     update = TRUE)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.857 0.008 0.866 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
